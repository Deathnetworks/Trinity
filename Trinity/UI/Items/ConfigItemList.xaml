<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:ut="clr-namespace:Trinity.UIComponents"
             xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"             
             xmlns:mock="clr-namespace:Trinity.Settings.Mock"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" Foreground="{DynamicResource TextBrush}" Background="DarkGray"             
             d:DesignHeight="500" d:DesignWidth="420">
    <UserControl.Resources>
        <ResourceDictionary>
            
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="..\Template.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <ut:EmptyStringToVisibilityConverter x:Key="EmptyStringToVisibilityConverter"/>
            <ut:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" TrueValue="Visible" FalseValue="Collapsed" />
            <ut:EnumVisibilityConverter x:Key="EnumVisibilityConverter" />
            <ut:UriToCachedImageConverter x:Key="UrlToCachedImageConverter" />

            <mock:MockData x:Key="DesignViewModel"/>

            <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="ItemPropertyProvider">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="ut:ItemProperty" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <Style x:Key="StatusLabelStyle" TargetType="{x:Type Label}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="FontWeight" Value="Normal"/>
            </Style>

            <Style x:Key="GroupHeaderPrimaryLabelStyle" TargetType="{x:Type Label}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="FontWeight" Value="Normal"/>
                <Setter Property="FontSize" Value="12"></Setter>
                <Setter Property="Padding" Value="0,0,0,0"></Setter>
                <Setter Property="Margin" Value="0"></Setter>
            </Style>

            <Style x:Key="TitleLabelStyle" TargetType="{x:Type Label}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Margin" Value="0"></Setter>
                <Setter Property="FontSize" Value="14"></Setter>
                <Setter Property="Padding" Value="0,0,0,0"></Setter>
                <Setter Property="FontWeight" Value="Bold"></Setter>
                <Setter Property="Height" Value="Auto"></Setter>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=IsSetItem}" Value="True">
                        <Setter Property="Foreground" Value="#8bd442"></Setter>
                    </DataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Path=IsSetItem}" Value="False" />
                            <Condition Binding="{Binding Path=Quality}" Value="Legendary" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Foreground" Value="#bf642f"/>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="UnselectedTitleLabelStyle" TargetType="{x:Type Label}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Margin" Value="0,0,0,0"></Setter>
                <Setter Property="FontSize" Value="12"></Setter>
                <Setter Property="Padding" Value="0,0,0,0"></Setter>
                <Setter Property="FontWeight" Value="Normal"></Setter>
                <Setter Property="Height" Value="Auto"></Setter>
                <Setter Property="Foreground" Value="#cccccc"></Setter>
            </Style>

            <Style x:Key="SubtleInformationStyle" TargetType="{x:Type Label}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Margin" Value="0,0,0,0"></Setter>
                <Setter Property="FontSize" Value="11"></Setter>
                <Setter Property="Padding" Value="0,2,2,0"></Setter>
                <Setter Property="FontWeight" Value="Normal"></Setter>
                <Setter Property="Height" Value="Auto"></Setter>
                <Setter Property="Foreground" Value="#cccccc"></Setter>
            </Style>

            <Style x:Key="TextBlockSubtleInformationStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Margin" Value="0,0,0,0"></Setter>
                <Setter Property="FontSize" Value="11"></Setter>
                <Setter Property="Padding" Value="0,2,2,0"></Setter>
                <Setter Property="FontWeight" Value="Normal"></Setter>
                <Setter Property="Height" Value="Auto"></Setter>
                <Setter Property="Foreground" Value="#cccccc"></Setter>
            </Style>

            <Style x:Key="QualityLabelStyle" TargetType="{x:Type Label}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Margin" Value="0"></Setter>
                <Setter Property="Padding" Value="0,0,0,0"></Setter>
                <Setter Property="FontSize" Value="11"></Setter>
                <Setter Property="FontWeight" Value="Normal"></Setter>
                <Setter Property="Height" Value="Auto"></Setter>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=IsSetItem}" Value="True">
                        <Setter Property="Foreground" Value="#8bd442"></Setter>
                    </DataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Path=IsSetItem}" Value="False" />
                            <Condition Binding="{Binding Path=Quality}" Value="Legendary" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Foreground" Value="#bf642f"/>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="SelfAdjustingHeightImageStyle" TargetType="{x:Type Image}">
                <Setter Property="Width" Value="64" />
                <Setter Property="Height" Value="64" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding BaseType}" Value="Weapon">
                        <Setter Property="Height" Value="128"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding BaseType}" Value="Armor">
                        <Setter Property="Height" Value="128"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <DataTemplate x:Key="SelectedRowTemplate">
                <Border Margin="0" Background="#444444" Padding="5,0,5,2">
                    <Border Padding="0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="15" MinWidth="15"/>
                                <ColumnDefinition MinWidth="54" />
                            </Grid.ColumnDefinitions>
                            <StackPanel Grid.Column="0" Orientation="Vertical">
                                <CheckBox x:Name="SelectedCheckBox" IsChecked="{Binding Path=IsSelected}" Margin="0,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                            </StackPanel>
                            <Border Grid.Column="1" Background="#333333" CornerRadius="3" Padding="10" >
                                <StackPanel Orientation="Vertical" Margin="0,0,1,1">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="80" />
                                            <ColumnDefinition Width="10" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <Border Grid.RowSpan="3" CornerRadius="4" Padding="5" BorderThickness="1" BorderBrush="#b07b38">
                                            <Border.Background>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="Black" Offset="0"/>
                                                    <GradientStop Color="#FF331F0D" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Border.Background>
                                            <Image Style="{StaticResource SelfAdjustingHeightImageStyle}" Height="128"
                                                   Source="{Binding IconUrl, Mode=OneWay, Converter={StaticResource UrlToCachedImageConverter}, IsAsync=true}"/>
                                        </Border>
                                        <StackPanel Grid.Row="0" Grid.Column="2" Margin="0,0,0,10">
                                            <DockPanel>
                                                <Label DockPanel.Dock="Left" Style="{StaticResource TitleLabelStyle}" Content="{Binding Name}" />
                                                <Label DockPanel.Dock="Right" Style="{StaticResource SubtleInformationStyle}" HorizontalAlignment="Right" Content="{Binding Id}"/>
                                            </DockPanel>
                                            <Label Style="{StaticResource QualityLabelStyle}" Content="{Binding QualityTypeLabel}"/>
                                            <WrapPanel Visibility="{Binding LegendaryAffix, Converter={StaticResource EmptyStringToVisibilityConverter}, Mode=OneWay}">
                                                <TextBlock ToolTip="{Binding LegendaryAffix}" Style="{StaticResource TextBlockSubtleInformationStyle}" Text="{Binding LegendaryAffix}" TextTrimming="CharacterEllipsis" />
                                            </WrapPanel>
                                        </StackPanel>
                                        <Border Grid.Row="1" Grid.Column="2" Grid.RowSpan="2"  ut:CancelMouseBubbling.Active="True" Background="#55171717" BorderBrush="#55666666" BorderThickness="0,0,1,1" Margin="0,5,0,0">
                                            <Border Padding="10,5,10,10" Background="Transparent" BorderBrush="#FF222222" BorderThickness="1,1,0,0">
                                                <StackPanel>
                                                    <Grid Background="Transparent" >
                                                        <TextBlock TextWrapping="Wrap" Text="Rules" Foreground="White" FontWeight="Bold" HorizontalAlignment="Left">
                                                        <Run Text="  (" FontWeight="Normal" Foreground="Gray" />
                                                        <Run Text="{Binding Mode=OneWay, Path=Rules.Count }" FontWeight="Normal" Foreground="Gray" />
                                                        <Run Text=") " FontWeight="Normal" Foreground="Gray" />
                                                        </TextBlock>
                                                        <ComboBox 
                                                    Background="Transparent" 
                                                   HorizontalAlignment="Right"
                                                  Name="AddRuleComboBox" 
                                                    FontWeight="Normal"
                                                  ut:SelectionChangedBehaviour.Command="{Binding AddRuleCommand}"
                                                             ItemsSource="{Binding ItemProperties}"                                     
                                                  Width="Auto"
                                                  Height="23" IsSynchronizedWithCurrentItem="False" Template="{DynamicResource ActionsComboBoxControlTemplate}"
                                                  Tag="Add Rule"
                                                  />
                                                    </Grid>
                                                    <WrapPanel x:Name="rulesContentContainer" Background="Transparent" Width="Auto">
                                                        <ItemsControl 
                                                        Width="{Binding ActualWidth, ElementName=rulesContentContainer}"
                                                              HorizontalContentAlignment="Stretch" 
                                                              HorizontalAlignment="Stretch" 
                                                              ItemsSource="{Binding Rules}" 
                                                              ItemContainerStyle="{DynamicResource ItemsControlSelector}">             
                                                        </ItemsControl>
                                                    </WrapPanel>
                                                </StackPanel>
                                            </Border>
                                        </Border>
                                    </Grid>
                                </StackPanel>
                            </Border>
                        </Grid>
                    </Border>
                </Border>
            </DataTemplate>

            <Style x:Key="ItemsControlSelector" TargetType="{x:Type ContentPresenter}">
                <Setter Property="Margin" Value="0"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="ContentTemplate" Value="{DynamicResource DefaultFormTemplate}"/>
                <Setter Property="DockPanel.Dock" Value="Top"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="Ancient">
                        <Setter Property="ContentTemplate" Value="{DynamicResource CheckboxFormTemplate}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="PrimaryStat">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="CriticalHitChance">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="CriticalHitDamage">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="SkillDamage">
                        <Setter Property="ContentTemplate" Value="{DynamicResource DropdownSliderFormTemplate}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="BaseDamage">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=ItemProperty}" Value="AttackSpeed">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SliderFormTemplate}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <DataTemplate x:Key="CheckboxFormTemplate">
                <Border Background="#55999999" BorderBrush="#CC999999" CornerRadius="1" Padding="2" BorderThickness="1,1,0,0">
                    <Grid Width="Auto" HorizontalAlignment="Stretch">
                        <WrapPanel HorizontalAlignment="Stretch" Width="Auto">
                            <CheckBox IsChecked="{Binding Path=Value}" Margin="0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                            <Label Foreground="White" Style="{StaticResource UnselectedTitleLabelStyle}" Content="{Binding Name}"/>
                        </WrapPanel>
                        <Button HorizontalAlignment="Right" Content=" X " Height="21" Width="25" Margin="10,-1,0,0" Background="Transparent" 
                                Command="{Binding Path=DataContext.RemoveRuleCommand, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" 
                                CommandParameter="{Binding ItemProperty}"
                                BorderBrush="Transparent" FontWeight="Heavy" BorderThickness="0" />
                    </Grid>
                </Border>
            </DataTemplate>

            <DataTemplate x:Key="SliderFormTemplate">
                <Border Background="#55999999" BorderBrush="#CC999999" CornerRadius="1" Padding="2" BorderThickness="1,1,0,0">
                    <Grid Width="Auto" HorizontalAlignment="Stretch">
                        <Grid Margin="0,0,10,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20*" />
                                <ColumnDefinition Width="37*" />
                            </Grid.ColumnDefinitions>
                            <Label Grid.Row="0"  Foreground="White" VerticalContentAlignment="Center" Style="{StaticResource UnselectedTitleLabelStyle}" Content="{Binding Name}"/>
                       
                            <Slider Grid.Row="0" Grid.Column="1" Template="{DynamicResource SliderEditable}" 
                                Interval="25" 
                                Maximum="{Binding Max, Mode=OneWay}" 
                                Minimum="{Binding Min, Mode=OneWay}" 
                                SmallChange="{Binding Step, Mode=OneWay}" 
                                TickFrequency="{Binding Step, Mode=OneWay}" 
                                IsSnapToTickEnabled="True"                                
                                TickPlacement="BottomRight"                                
                                Value="{Binding Value}" 
                                HorizontalAlignment="Stretch" Margin="5,0,25,0" />
                        </Grid>
                        <Button HorizontalAlignment="Right" Content=" X " Height="21" Width="25" Margin="10,-1,0,0" Background="Transparent" 
                                Command="{Binding Path=DataContext.RemoveRuleCommand, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" 
                                CommandParameter="{Binding ItemProperty}"
                                BorderBrush="Transparent" FontWeight="Heavy" BorderThickness="0" />
                    </Grid>
                </Border>
            </DataTemplate>

            <DataTemplate x:Key="DropdownSliderFormTemplate">
                <Border Background="#55999999" BorderBrush="#CC999999" CornerRadius="1" Padding="2" BorderThickness="1,1,0,0">
                    <Grid Width="Auto" HorizontalAlignment="Stretch">
                        <Grid Margin="0,0,10,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="27*" />
                                <ColumnDefinition Width="49*" />
                            </Grid.ColumnDefinitions>
                            <ComboBox Grid.Column="0" FontWeight="Normal"
                                      ItemsSource="{Binding Variants}" 
                                      SelectedValue="{Binding Variant, Mode=TwoWay}" 
                                      SelectedValuePath="Id" 
                                      DisplayMemberPath="Name"                                                                           
                                      Margin="0,0,0,0" />
                            <Slider Grid.Row="0" Grid.Column="1" Template="{DynamicResource SliderEditable}" 
                                Interval="25" 
                                Maximum="{Binding Max, Mode=OneWay}" 
                                Minimum="{Binding Min, Mode=OneWay}" 
                                SmallChange="{Binding Step, Mode=OneWay}" 
                                TickFrequency="{Binding Step, Mode=OneWay}" 
                                IsSnapToTickEnabled="True"                                
                                TickPlacement="BottomRight" 
                                Value="{Binding Value}" 
                                HorizontalAlignment="Stretch" Margin="5,0,25,0" />
                        </Grid>
                        <Button HorizontalAlignment="Right" Content=" X " Height="21" Width="25" Margin="10,-1,0,0" Background="Transparent" 
                                Command="{Binding Path=DataContext.RemoveRuleCommand, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" 
                                CommandParameter="{Binding ItemProperty}"
                                BorderBrush="Transparent" FontWeight="Heavy" BorderThickness="0" />
                    </Grid>
                </Border>
            </DataTemplate>

            <DataTemplate x:Key="DefaultFormTemplate">
                <Border Background="#55999999" BorderBrush="#CC999999" CornerRadius="1" Padding="2" BorderThickness="1,1,0,0">
                    <Grid Width="Auto" HorizontalAlignment="Stretch">
                        <WrapPanel HorizontalAlignment="Stretch" Width="Auto">
                            <Label Foreground="White" Style="{StaticResource UnselectedTitleLabelStyle}" Content="{Binding Name}"/>
                        </WrapPanel>
                        <Button HorizontalAlignment="Right" Content=" X " Height="21" Width="25" Margin="10,-1,0,0" Background="Transparent" 
                                Command="{Binding Path=DataContext.RemoveRuleCommand, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" 
                                CommandParameter="{Binding ItemProperty}"
                                BorderBrush="Transparent" FontWeight="Heavy" BorderThickness="0" />
                    </Grid>
                </Border>
            </DataTemplate>

            <DataTemplate x:Key="NormalRowTemplate">
                <StackPanel Orientation="Horizontal" Margin="5,2,5,2">
                    <CheckBox x:Name="SelectedCheckBox" IsChecked="{Binding Path=IsSelected}" Margin="0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    <Label Style="{StaticResource UnselectedTitleLabelStyle}" Margin="6,0,0,0" Content="{Binding Name}"/>
                </StackPanel>
            </DataTemplate>

            <Style x:Key="ListViewItemStyle" TargetType="{x:Type ListViewItem}">
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="Transparent"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                        <Setter Property="ContentTemplate" Value="{DynamicResource SelectedRowTemplate}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Path=IsSelected}" Value="False">
                        <Setter Property="ContentTemplate" Value="{DynamicResource NormalRowTemplate}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            
        </ResourceDictionary>
    </UserControl.Resources>

    <ut:ModalContentPresenter x:Name="modalPresenter" IsModal="{Binding ItemList.IsModalVisible}" OpenCommand="{Binding ItemList.LoadModalCommand}">

        <DockPanel LastChildFill="True" VerticalAlignment="Stretch">

            <StackPanel DockPanel.Dock="Top" Margin="0,0,0,0" Orientation="Horizontal" Background="#FF6A6A6A" Height="38" VerticalAlignment="Center">
                <Label Style="{StaticResource StatusLabelStyle}" VerticalContentAlignment="Center" Margin="5,0,0,0" Content="Search:"></Label>
                <TextBox Width="140" Height="22" Text="{Binding ItemList.FilterText, UpdateSourceTrigger=PropertyChanged}" Margin="0,8" ToolTip="Search by Item Name or Id"/>
                <Button Content=" X " Height="21" Width="25" Margin="-27,-1,0,0" Background="Transparent" Command="{Binding ItemList.ResetFilterCommand}" BorderBrush="Transparent" FontWeight="Heavy" BorderThickness="1" Visibility="{Binding ItemList.IsFiltered, Converter={StaticResource BoolToVisibilityConverter}}" />
                <Label Style="{StaticResource StatusLabelStyle}" VerticalContentAlignment="Center" Margin="5,0,0,0" Content="Group By:"></Label>
                <ComboBox Tag="" SelectedValuePath="Tag" x:Name="GroupingDropdown" MaxHeight="25" SelectedValue="{Binding ItemList.Grouping}" Padding="0,0,15,0">
                    <ComboBoxItem Content="None" Tag="None" Foreground="White" Background="Black" />
                    <ComboBoxItem Content="ItemType" Tag="ItemType" Foreground="White" Background="Black" />
                    <ComboBoxItem Content="Sets" Tag="SetName" Foreground="White" Background="Black" />
                    <ComboBoxItem Content="IsValid" Tag="IsValid" Foreground="White" Background="Black" />
                </ComboBox>
                <Button Command="{Binding Source={x:Static ut:ModalContentCommands.ShowModalContent}}" CommandParameter="Export" Width="Auto" Padding="7,0" Margin="10,7,5,7">
                    Export
                </Button>
                <Button Command="{Binding Source={x:Static ut:ModalContentCommands.ShowModalContent}}" CommandParameter="Import" Width="Auto" Padding="7,0" Margin="0,7,5,7">
                    Import
                </Button>
            </StackPanel>

            <ScrollViewer 
            HorizontalContentAlignment="Stretch" 
            VerticalContentAlignment="Stretch"             
            CanContentScroll="True"
            Margin="0,0,0,0">
                <ListView x:Name="ListView1"                      
                d:DataContext="{Binding Source={StaticResource DesignViewModel}}"
                SelectionMode="Multiple"                          
                ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                ScrollViewer.VerticalScrollBarVisibility="Disabled"                               
                ItemContainerStyle="{DynamicResource ListViewItemStyle}"                         
                Background="#FF474747"                          
                ItemsSource="{Binding ItemList.Collection.View}"                      
                VerticalContentAlignment="Stretch"
                Style="{DynamicResource ListViewStyle1}">
                    <ListView.Resources>
                        <Style x:Key="ListViewStyle1" TargetType="{x:Type ListView}">
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListView}">
                                        <themes:ListBoxChrome x:Name="Bd" 
                                        BorderBrush="{TemplateBinding BorderBrush}" 
                                        BorderThickness="{TemplateBinding BorderThickness}" 
                                        Background="{TemplateBinding Background}" 
                                        RenderMouseOver="{TemplateBinding IsMouseOver}" 
                                        RenderFocused="{TemplateBinding IsKeyboardFocusWithin}" 
                                        SnapsToDevicePixels="False">
                                            <ItemsPresenter SnapsToDevicePixels="False"/>
                                        </themes:ListBoxChrome>
                                        <ControlTemplate.Triggers>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsGrouping" Value="true"/>
                                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                            </MultiTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.Resources>
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.ContainerStyle>
                                <Style TargetType="{x:Type GroupItem}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Expander FontWeight="Bold" Foreground="LightSkyBlue" Header="{Binding Name}" IsExpanded="{Binding ItemList.GroupsExpandedByDefault, FallbackValue=True}">
                                                    <Expander.HeaderTemplate>
                                                        <DataTemplate>
                                                            <StackPanel Orientation="Horizontal">
                                                                <Label Style="{StaticResource GroupHeaderPrimaryLabelStyle}" Content="{Binding}"></Label>
                                                            </StackPanel>
                                                        </DataTemplate>
                                                    </Expander.HeaderTemplate>
                                                    <ItemsPresenter />
                                                </Expander>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </GroupStyle.ContainerStyle>
                        </GroupStyle>
                    </ListView.GroupStyle>
                </ListView>
            </ScrollViewer>
        </DockPanel>

        <!-- Import/Export Modal -->
        <ut:ModalContentPresenter.ModalContent>
            <Grid Margin="45,45,45,45">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="45" />
                </Grid.RowDefinitions>

                <!-- Import -->
                <TextBox Grid.Row="0" Visibility="{Binding Path=ItemList.SelectedModalPage, Converter={StaticResource EnumVisibilityConverter}, ConverterParameter=Import}" 
                         Text="{Binding ItemList.ExportCode, FallbackValue='Export Code Error'}" MinHeight="200" Height="Auto" TextWrapping="Wrap" VerticalScrollBarVisibility="Auto" IsReadOnly="False" />

                <UniformGrid Grid.Row="1" Visibility="{Binding Path=ItemList.SelectedModalPage, Converter={StaticResource EnumVisibilityConverter}, ConverterParameter=Import}">
                    <Button Content="Import" Margin="0,0,0,-22.5" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Width="Auto" Height="Auto" Command="{Binding ItemList.ImportCommand}" />
                    <Button Content="Close" Margin="0,0,0,-22.5" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Width="Auto" Height="Auto" Command="{Binding Source={x:Static ut:ModalContentCommands.HideModalContent}}" />
                </UniformGrid>

                <!-- Export -->
                <TextBox Grid.Row="0" Visibility="{Binding Path=ItemList.SelectedModalPage, Converter={StaticResource EnumVisibilityConverter}, ConverterParameter=Export}" 
                         Text="{Binding ItemList.ExportCode, FallbackValue='Export Code Error'}" MinHeight="200" Height="Auto" TextWrapping="Wrap" ut:SelectTextOnFocus.Active="True" VerticalScrollBarVisibility="Auto" IsReadOnly="True" />

                <StackPanel Grid.Row="1" Visibility="{Binding Path=ItemList.SelectedModalPage, Converter={StaticResource EnumVisibilityConverter}, ConverterParameter=Export}">
                    <Button Content="Close" Margin="0" Padding="10" Height="45" Command="{Binding Source={x:Static ut:ModalContentCommands.HideModalContent}}" />
                </StackPanel>

            </Grid>
        </ut:ModalContentPresenter.ModalContent>
    </ut:ModalContentPresenter>
</UserControl>
