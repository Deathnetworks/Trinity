<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:ut="clr-namespace:Trinity.UIComponents"
             xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=PresentationFramework">
    <ut:IntToStringConverter x:Key="intToStringConverter"/>

    <Style x:Key="LinkButton" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock TextDecorations="Underline">
                        <ContentPresenter />
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="#FF00AAFF" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="Red" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- For Design Time Viewing in VS Dark Theme -->
    <Style TargetType="{x:Type UserControl}">
        <Style.Triggers>
            <Trigger Property="componentModel:DesignerProperties.IsInDesignMode" Value="true">
                <Setter Property="Background" Value="#FFAAAAAA" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#FF666666" />
    </Style>
    <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource {x:Type ComboBoxItem}}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#FF666666" />
    </Style>
    <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
        <Setter Property="Margin" Value="5" />
    </Style>
    <ControlTemplate x:Key="Slider" TargetType="{x:Type Slider}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="50"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Slider Grid.Row="1"
                    Value="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}"
                    Delay="{TemplateBinding Delay}"
                    Interval="{TemplateBinding Interval}"
                    IsEnabled="{TemplateBinding IsEnabled}"
                    IsMoveToPointEnabled="True"
                    IsSnapToTickEnabled="{TemplateBinding IsSnapToTickEnabled}"
                    LargeChange="{TemplateBinding LargeChange}"
                    Orientation="{TemplateBinding Orientation}"
                    SmallChange="{TemplateBinding SmallChange}"
                    TickFrequency="{TemplateBinding TickFrequency}"
                    TickPlacement="{TemplateBinding TickPlacement}"
                    Ticks="{TemplateBinding Ticks}"
                    ToolTip="{TemplateBinding ToolTip}"
                    Maximum="{TemplateBinding Maximum}"
                    Minimum="{TemplateBinding Minimum}"
                    HorizontalAlignment="Stretch" 
                    VerticalAlignment="Center"
                    Margin="0,0,2,0"
                    Style="{x:Null}"
                    x:Name="MySlider"/>
            <TextBox Grid.Column="1" Grid.Row="1"
                        Text="{Binding Value, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource intToStringConverter}}"                     
                        HorizontalAlignment="Stretch" 
                        Margin="0,2,2,2" TextAlignment="Center" 
                        IsReadOnly="True"/>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="SliderLTB" TargetType="{x:Type Slider}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="55"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Slider Grid.Row="1"
                    Value="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}"
                    Delay="{TemplateBinding Delay}"
                    Interval="{TemplateBinding Interval}"
                    IsEnabled="{TemplateBinding IsEnabled}"
                    IsMoveToPointEnabled="True"
                    IsSnapToTickEnabled="{TemplateBinding IsSnapToTickEnabled}"
                    LargeChange="{TemplateBinding LargeChange}"
                    Orientation="{TemplateBinding Orientation}"
                    SmallChange="{TemplateBinding SmallChange}"
                    TickFrequency="{TemplateBinding TickFrequency}"
                    TickPlacement="{TemplateBinding TickPlacement}"
                    Ticks="{TemplateBinding Ticks}"
                    ToolTip="{TemplateBinding ToolTip}"
                    Maximum="{TemplateBinding Maximum}"
                    Minimum="{TemplateBinding Minimum}"
                    HorizontalAlignment="Stretch" 
                    VerticalAlignment="Center"
                    Margin="0,0,2,0"
                    Style="{x:Null}"
                    x:Name="MySlider"/>
            <TextBox Grid.Column="1" Grid.Row="1"
                        Text="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}" 
                        HorizontalAlignment="Stretch" 
                        Margin="0,2,2,2" 
                        TextAlignment="Center" 
                        IsReadOnly="True"/>
        </Grid>
    </ControlTemplate>
</ResourceDictionary>
